From 7a2b9a1cdc8bb2813391a7d17dfafdc63b822fd2 Mon Sep 17 00:00:00 2001
From: Kevin Mihelich <kevin@archlinuxarm.org>
Date: Thu, 30 Apr 2015 20:15:13 -0600
Subject: [PATCH] AUFS fix for 3.10.76

---
 fs/aufs/dcsub.c   | 4 ++--
 fs/aufs/debug.c   | 2 +-
 fs/aufs/export.c  | 2 +-
 fs/aufs/hnotify.c | 4 ++--
 4 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/fs/aufs/dcsub.c b/fs/aufs/dcsub.c
index 1746e79..c2e69fe 100644
--- a/fs/aufs/dcsub.c
+++ b/fs/aufs/dcsub.c
@@ -133,7 +133,7 @@ resume:
 	while (next != &this_parent->d_subdirs) {
 		struct list_head *tmp = next;
 		struct dentry *dentry = list_entry(tmp, struct dentry,
-						   d_u.d_child);
+						   d_child);
 
 		next = tmp->next;
 		spin_lock_nested(&dentry->d_lock, DENTRY_D_LOCK_NESTED);
@@ -169,7 +169,7 @@ resume:
 		this_parent = tmp;
 		spin_lock(&this_parent->d_lock);
 		rcu_read_unlock();
-		next = child->d_u.d_child.next;
+		next = child->d_child.next;
 		goto resume;
 	}
 
diff --git a/fs/aufs/debug.c b/fs/aufs/debug.c
index 3465e79..5cc8337 100644
--- a/fs/aufs/debug.c
+++ b/fs/aufs/debug.c
@@ -169,7 +169,7 @@ void au_dpri_dalias(struct inode *inode)
 	struct dentry *d;
 
 	spin_lock(&inode->i_lock);
-	hlist_for_each_entry(d, &inode->i_dentry, d_alias)
+	hlist_for_each_entry(d, &inode->i_dentry, d_u.d_alias)
 		au_dpri_dentry(d);
 	spin_unlock(&inode->i_lock);
 }
diff --git a/fs/aufs/export.c b/fs/aufs/export.c
index 484794d..bbeb8dd 100644
--- a/fs/aufs/export.c
+++ b/fs/aufs/export.c
@@ -243,7 +243,7 @@ static struct dentry *decode_by_ino(struct super_block *sb, ino_t ino,
 		dentry = d_find_alias(inode);
 	else {
 		spin_lock(&inode->i_lock);
-		hlist_for_each_entry(d, &inode->i_dentry, d_alias) {
+		hlist_for_each_entry(d, &inode->i_dentry, d_u.d_alias) {
 			spin_lock(&d->d_lock);
 			if (!au_test_anon(d)
 			    && d->d_parent->d_inode->i_ino == dir_ino) {
diff --git a/fs/aufs/hnotify.c b/fs/aufs/hnotify.c
index 6b5b85e..6b2e1fa 100644
--- a/fs/aufs/hnotify.c
+++ b/fs/aufs/hnotify.c
@@ -211,7 +211,7 @@ static int hn_gen_by_inode(char *name, unsigned int nlen, struct inode *inode,
 		AuDebugOn(!name);
 		au_iigen_dec(inode);
 		spin_lock(&inode->i_lock);
-		hlist_for_each_entry(d, &inode->i_dentry, d_alias) {
+		hlist_for_each_entry(d, &inode->i_dentry, d_u.d_alias) {
 			spin_lock(&d->d_lock);
 			dname = &d->d_name;
 			if (dname->len != nlen
@@ -378,7 +378,7 @@ static struct dentry *lookup_wlock_by_name(char *name, unsigned int nlen,
 
 	dentry = NULL;
 	spin_lock(&parent->d_lock);
-	list_for_each_entry(d, &parent->d_subdirs, d_u.d_child) {
+	list_for_each_entry(d, &parent->d_subdirs, d_child) {
 		/* AuDbg("%.*s\n", AuDLNPair(d)); */
 		spin_lock_nested(&d->d_lock, DENTRY_D_LOCK_NESTED);
 		dname = &d->d_name;
-- 
2.3.7

